# Autoconf configuration
AC_INIT(
    [FMS],
    [ ],
    [https://github.com/NOAA-GFDL/FMS/issues])

# Validate srdcir and configure input
AC_CONFIG_SRCDIR([fms/fms.F90])
AC_CONFIG_MACRO_DIR([m4])

# C configuration
AC_PROG_CC
AX_MPI
CC=$MPICC

# FMS: Check if Linux gettid is avaiable
AC_CHECK_FUNCS([gettid])


# Standard Fortran configuration
AC_LANG(Fortran)
AC_FC_SRCEXT(f90)
AC_PROG_FC


# Determine MPI compiler wrappers and override compilers
AX_MPI
AC_SUBST(FC, $MPIFC)
AC_SUBST(LD, $MPIFC)


# Module tests
# XXX: This is a little redundant after AX_MPI, but it is Fortran-specific
AX_FC_CHECK_MODULE([mpi])
AC_DEFINE([use_libMPI])


# netCDF configuration
AC_PATH_PROG([NC_CONFIG], [nc-config])
AS_IF([test -n "$NC_CONFIG"],
  [CPPFLAGS="$CPPFLAGS -I$($NC_CONFIG --includedir)"
  FCFLAGS="$FCFLAGS -I$($NC_CONFIG --includedir)"
  LDFLAGS="$LDFLAGS -L$($NC_CONFIG --libdir)"],
  [AC_MSG_ERROR([Could not find nc-config.])])

AX_FC_CHECK_MODULE([netcdf],
  [], [AC_MSG_ERROR([Could not find FMS library.])])
AX_FC_CHECK_LIB([netcdff], [nf_create], [netcdf],
  [], [AC_MSG_ERROR([Could not link netcdff library.])]
)
AC_DEFINE([use_netCDF])


# Enable Cray pointers
AX_FC_CRAY_POINTER
AS_IF([test "$enable_cray_ptr" != no],
  [FCFLAGS="$FCFLAGS $CRAY_POINTER_FCFLAGS"],
  [AC_MSG_ERROR(["$FC cannot support Cray pointers"])]
)


# Force 8-byte reals
AX_FC_REAL8
AS_IF(
  [test "$enable_real8" != no],
  [FCFLAGS="$FCFLAGS $REAL8_FCFLAGS"])


# OpenMP configuration
AC_OPENMP
AS_IF(
  [test "$enable_openmp" = yes],
  [FCFLAGS="$FCFLAGS $OPENMP_FCFLAGS"
  LDFLAGS="$LDFLAGS $OPENMP_FCFLAGS"])


# Unlimited line length
AC_FC_LINE_LENGTH([unlimited])

# Allow invaliz BOZ assignment
AX_FC_ALLOW_INVALID_BOZ
FCFLAGS="$FCFLAGS $ALLOW_INVALID_BOZ_FCFLAGS"

# Allow argument mismatch (for functions lacking interfaces)
AX_FC_ALLOW_ARG_MISMATCH
FCFLAGS="$FCFLAGS $ALLOW_ARG_MISMATCH_FCFLAGS"


# Search for mkmf build tools
AC_PATH_PROG([LIST_PATHS], [list_paths])
AS_IF([test -z "$LIST_PATHS"], [
  AC_PATH_PROG([LIST_PATHS], [list_paths], [], ["$PATH:${srcdir}/../../bin"])
  AS_IF([test -z "$LIST_PATHS"],
    [AC_MSG_ERROR([Could not find list_paths.])],
    [AC_SUBST(PATH, ["$PATH:${srcdir}/../../bin"])])
  ]
)

AC_PATH_PROG([MKMF], [mkmf])
AS_IF([test -z "$MKMF"], [
  AC_PATH_PROG([MKMF], [mkmf], [], ["$PATH:${srcdir}/../../bin"])
  AS_IF([test -z "$MKMF"],
    [AC_MSG_ERROR([Could not find mkmf.])],
    [AC_SUBST(PATH, ["$PATH:${srcdir}/../../bin"])])
  ]
)


# MKMF commands
AC_CONFIG_COMMANDS([path_names],
  [${LIST_PATHS} -l ${srcdir}],
  [LIST_PATHS=${LIST_PATHS}])


AC_CONFIG_COMMANDS([mkmf],
  [${MKMF} -p ../../lib/libFMS.a -m Makefile.mkmf path_names],
  [MKMF=${MKMF}])


# Prepare output
AC_SUBST(CPPFLAGS)
AC_CONFIG_FILES(Makefile)
AC_OUTPUT
